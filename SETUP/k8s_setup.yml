---
- name: Deploy K8s and GitLab Runner
  hosts: k8s
  become: yes
  vars_files:
    - /tmp/env.yml
  tasks:
    - name: Get EC2 metadata token
      uri:
        url: http://169.254.169.254/latest/api/token
        method: PUT
        headers:
          X-aws-ec2-metadata-token-ttl-seconds: 21600
        return_content: yes
      register: imds_token
      delegate_to: localhost

    - name: Get EC2 instance public IP
      uri:
        url: http://169.254.169.254/latest/meta-data/public-ipv4
        method: GET
        headers:
          X-aws-ec2-metadata-token: "{{ imds_token.content }}"
        return_content: yes
      register: ec2_public_ip
      delegate_to: localhost

    - name: Update values.yaml with GitLab URL locally
      command: >
        sed -i '51s#gitlabUrl: *http://ip.*#gitlabUrl: http://{{ ec2_public_ip.content }}/#' {{ playbook_dir }}/values.yaml
      delegate_to: localhost

    - name: Update values.yaml with runner registration token locally
      command: >
        sed -i '57s#runnerRegistrationToken: *"token"#runnerRegistrationToken: "{{ runner_registration_token }}"#' {{ playbook_dir }}/values.yaml
      delegate_to: localhost

    - name: Copy env.yml to remote
      copy:
        src: /tmp/env.yml
        dest: /tmp/env.yml
        mode: '0644'

    - name: Copy updated values.yaml to remote
      copy:
        src: ./values.yaml
        dest: /tmp/values.yaml
        mode: '0644'

    - name: Copy k8s_setup.sh to remote
      copy:
        src: ./k8s_setup.sh
        dest: /tmp/k8s_setup.sh
        mode: '0755'

    - name: Update k8s_setup.sh with registry bot token from env.yml
      block:
        - name: Replace first occurrence of registry token
          replace:
            path: /tmp/k8s_setup.sh
            regexp: '"x-registry-bot:<token>"'
            replace: '"x-registry-bot:{{ registry_bot_token }}"'

        - name: Replace second occurrence of registry token
          replace:
            path: /tmp/k8s_setup.sh
            regexp: '"password":"<token>"'
            replace: '"password":"{{ registry_bot_token }}"'

        - name: Update k8s_setup.sh with GitLab registry URL
          replace:
            path: /tmp/k8s_setup.sh
            regexp: 'http://<ip>'
            replace: 'http://{{ ec2_public_ip.content }}'

    - name: Install K3s
      shell: curl -sfL https://get.k3s.io | sh -
      args:
        creates: /etc/rancher/k3s/k3s.yaml

    - name: Verify K3s service is running
      service:
        name: k3s
        state: started
      register: k3s_service
      until: k3s_service.status.ActiveState == 'active'
      retries: 10
      delay: 15

    - name: Persist KUBECONFIG environment variable
      lineinfile:
        path: /root/.bashrc
        line: 'export KUBECONFIG=/etc/rancher/k3s/k3s.yaml'
        create: yes
        mode: '0644'

    - name: Install Helm
      shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      args:
        creates: /usr/local/bin/helm

    - name: Add GitLab Helm repository
      shell: helm repo add gitlab https://charts.gitlab.io/
      args:
        creates: /root/.cache/helm/repository/gitlab-charts.yaml
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Create ci-build namespace
      shell: kubectl create ns ci-build
      args:
        creates: /tmp/ci-build-namespace-created
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: namespace_creation
      failed_when: namespace_creation.rc != 0 and 'AlreadyExists' not in namespace_creation.stderr
      retries: 5
      delay: 10

    - name: Install GitLab Runner using Helm
      shell: helm install --namespace ci-build gitlab-runner -f /tmp/values.yaml gitlab/gitlab-runner
      args:
        creates: /tmp/gitlab-runner-installed
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: helm_install
      failed_when: helm_install.rc != 0 and 'already exists' not in helm_install.stderr
      retries: 5
      delay: 10

    - name: Run k8s_setup.sh
      shell: /tmp/k8s_setup.sh
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: k8s_setup
      until: k8s_setup.rc == 0
      retries: 5
      delay: 15

    - name: Fetch kubeconfig.yml from remote to local
      fetch:
        src: /tmp/kubeconfig.yml
        dest: /tmp/kubeconfig.yml
        flat: yes

    - name: Execute k8s_config.rb in GitLab Rails console locally
      command: >
        gitlab-rails runner {{ playbook_dir }}/k8s_config.rb
      delegate_to: localhost
      register: gitlab_rails_result
      retries: 3
      delay: 5
      until: gitlab_rails_result.rc == 0